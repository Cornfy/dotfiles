#!/bin/bash

# --- 使用绝对路径 ---
MPC_CMD="/usr/bin/mpc"

# 1. 检查 MPD 状态
if ! $MPC_CMD status &>/dev/null; then
    echo "{}"
    exit 0
fi

# 2. 获取所有需要的信息
status_output=$($MPC_CMD status 2>/dev/null)
player_status=$(echo "$status_output" | awk 'NR==2 {print $1}' | tr -d '[]')

if [[ "$player_status" == "stopped" || -z "$player_status" ]]; then
    echo "{}"
    exit 0
fi

# 3. 设置图标和 CSS Class
if [[ "$player_status" == "playing" ]]; then
    icon=""
    class="playing"
else # Paused
    icon=""
    class="paused"
fi

# 4. 准备 Bar 上显示的 'text'
song_title=$($MPC_CMD -f "%title%" current 2>/dev/null)
text="$icon $(echo $song_title | cut -c1-30)"

# 5. 准备悬停提示的 'tooltip'
full_song_info=$($MPC_CMD -f "%artist% - %title%" current 2>/dev/null)
progress=$(echo "$status_output" | awk 'NR==2 {print $3, $4}')
volume=$(echo "$status_output" | awk -F'volume:' 'NR==3 {print $2}' | awk '{print $1}')
tooltip=$(printf "🎵 %s\n\n %s\n %s" \
    "$full_song_info" \
    "$progress" \
    "$volume")

# ================================================================
#               全新的、更可靠的转义函数
# ================================================================
json_escape() {
    local input="$1"
    # 1. 转义反斜杠
    local escaped="${input//\\/\\\\}"
    # 2. 转义双引号
    escaped="${escaped//\"/\\\"}"
    # 3. 将真实的换行符替换为 \n 文本
    escaped="${escaped//$'\n'/\\n}"
    echo -n "$escaped"
}
# ================================================================

# 6. 使用新函数构建 JSON 并输出
text_escaped=$(json_escape "$text")
tooltip_escaped=$(json_escape "$tooltip")
class_escaped=$(json_escape "$class")

printf '{"text":"%s", "tooltip":"%s", "class":"%s"}\n' \
    "$text_escaped" \
    "$tooltip_escaped" \
    "$class_escaped"
